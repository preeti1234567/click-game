{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\click-game\\\\click-game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport pups from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.randomPups = this.shuffle(pups);\n    this.state = {\n      search: \"\",\n      pups: this.randomPups,\n      puppyIds: [],\n      score: 0,\n      goal: 8,\n      status: \"\"\n    };\n    this.newScore = this.state.score;\n    this.clickedPuppyIds = this.state.puppyIds;\n\n    this.shuffleScoreCard = id => {\n      this.randomPups = this.shuffle(pups);\n      this.clickedPuppyIds = this.puppyIds;\n      console.log(id);\n      console.log(this.clickedPuppyIds.some(pupId => pupId === id));\n\n      if (this.clickedPuppyIds.some(pupId => pupId === id)) {\n        this.newScore = 0;\n      } else {\n        this.newScore++;\n      }\n\n      this.clickedPuppyIds.push(id);\n      this.setState(state => ({\n        search: \"\",\n        pups: this.randomPups,\n        puppyIds: this.clickedPuppyIds,\n        score: this.newScore,\n        goal: 8,\n        status: \"\"\n      }));\n    };\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"The Clickster\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Try not to click the same image twice!\")), /*#__PURE__*/React.createElement(Score, {\n      total: this.state.score,\n      goal: 8,\n      status: this.state.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, this.state.pups.map(puppy => /*#__PURE__*/React.createElement(Card, {\n      shuffleScoreCard: this.shuffleScoreCard,\n      id: puppy.id,\n      key: puppy.id,\n      image: puppy.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }))));\n  } //}\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/GitHub/click-game/click-game/src/App.js"],"names":["React","Component","Card","Wrapper","Score","pups","App","randomPups","shuffle","state","search","puppyIds","score","goal","status","newScore","clickedPuppyIds","shuffleScoreCard","id","console","log","some","pupId","push","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","map","puppy","image"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport pups from \"./cards.json\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  randomPups = this.shuffle(pups);\n\n  // Setting this.state.pups to the cards json array\n  state = {\n    search: \"\",\n    pups:this.randomPups,\n    puppyIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  newScore = this.state.score;\n  clickedPuppyIds = this.state.puppyIds;\n\n  shuffleScoreCard = (id) => {\n    this.randomPups = this.shuffle(pups);\n    this.clickedPuppyIds = this.puppyIds;\n    console.log(id);\n    console.log(this.clickedPuppyIds.some(pupId => pupId === id));\n    if(this.clickedPuppyIds.some(pupId => pupId === id))\n    {\n      this.newScore = 0;\n    }\n    else\n    {\n      this.newScore++;\n    }\n\n    this.clickedPuppyIds.push(id);\n    this.setState(state => (\n      {\n        search: \"\",\n        pups:this.randomPups,\n        puppyIds:this.clickedPuppyIds,\n        score: this.newScore,\n        goal: 8,\n        status: \"\"\n      }));\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">The Clickster</h1>\n          <p className=\"App-intro\">\n            Try not to click the same image twice!\n          </p>\n        </header>\n        \n        <Score total={this.state.score}\n           goal={8}\n           status={this.state.status}\n        />\n        <Wrapper>\n          {this.state.pups.map(puppy => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={puppy.id}\n              key={puppy.id}\n              image={puppy.image}\n            />\n          ))}\n        </Wrapper>\n        \n    </div>\n    );\n  }\n//}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
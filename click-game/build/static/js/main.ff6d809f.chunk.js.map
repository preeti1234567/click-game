{"version":3,"sources":["components/Card.js","components/Wrapper.js","components/Score.js","App.js","index.js"],"names":["Card","props","console","log","url","className","style","backgroundColor","alt","name","src","image","id","onClick","shuffleScoreCard","Wrapper","children","Score","score","topScore","App","state","pups","puppyIds","newScore","clickedPuppyIds","randomPups","shuffle","some","pupId","push","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","height","fontSize","this","map","puppy","key","Component","ReactDOM","render","document","getElementById"],"mappings":"yyCAmBeA,MAjBf,SAAcC,GAEZ,OADAC,QAAQC,IAAIF,EAAMG,KAEhB,yBAAKC,UAAU,uBACb,yBAAKC,MAAO,CAAEC,gBAAiB,QAAUF,UAAU,eACjD,yBACEG,IAAKP,EAAMQ,KACXC,IAAKT,EAAMU,MACXC,GAAIX,EAAMW,GACVC,QAAS,kBAAMZ,EAAMa,iBAAiBb,EAAMW,KAC5CP,UAAU,oBCNLU,EAFC,SAAAd,GAAK,OAAI,yBAAKI,UAAU,WAAWJ,EAAMe,WCI1CC,EAND,SAAAhB,GAAK,OACjB,yBAAKI,UAAU,aACb,wBAAIA,UAAU,0BAAd,cAAmDJ,EAAMiB,MAAzD,gBAA6EjB,EAAMkB,SAAnF,O,OC8FWC,G,kNApFbC,MAAQ,CACNC,OACAC,SAAU,GACVL,MAAO,EACPC,SAAU,G,EAsBZK,SAAW,EAAKH,MAAMH,M,EACtBO,gBAAkB,EAAKJ,MAAME,S,EAC7BJ,SAAW,EAAKE,MAAMF,S,EAEtBL,iBAAmB,SAACF,GAClB,EAAKc,WAAa,EAAKC,QAAQ,EAAKN,MAAMC,MAC1C,EAAKG,gBAAkB,EAAKJ,MAAME,SAC/B,EAAKE,gBAAgBG,MAAK,SAAAC,GAAK,OAAIA,IAAUjB,MAE9C,EAAKY,SAAW,EAChB,EAAKC,gBAAgB,KAIrB,EAAKD,WACL,EAAKC,gBAAgBK,KAAKlB,GACvB,EAAKY,SAAW,EAAKL,WACtB,EAAKA,SAAW,EAAKK,WAEzB,EAAKO,UAAS,SAAAV,GAAK,MACjB,CACEC,KAAK,EAAKI,WACVH,SAAS,EAAKE,gBACdP,MAAO,EAAKM,SACZL,SAAU,EAAKA,c,sDA3Cba,GAIN,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,I,+BA+BC,IAAD,OACP,OACE,yBAAK3B,UAAU,OACb,4BAASC,MAAO,CAACkC,OAAO,QAAQnC,UAAU,cACxC,wBAAIA,UAAU,aAAd,iBACA,uBAAGC,MAAO,CAACmC,SAAS,QAASpC,UAAU,yBAAvC,2CAKF,kBAAC,EAAD,CAAOa,MAAOwB,KAAKrB,MAAMH,MACtBC,SAAUuB,KAAKrB,MAAMF,WAExB,kBAAC,EAAD,KACGuB,KAAKrB,MAAMC,KAAKqB,KAAI,SAAAC,GAAK,OACxB,kBAAC,EAAD,CACE9B,iBAAkB,EAAKA,iBACvBF,GAAIgC,EAAMhC,GACViC,IAAKD,EAAMhC,GACXD,MAAOiC,EAAMjC,iB,GA5ETmC,cCPlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ff6d809f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\nfunction Card(props) {\r\n  console.log(props.url);\r\n  return (\r\n    <div className=\" container col-md-3\">\r\n      <div style={{ backgroundColor: \"grey\" }} className=\"card-header\">\r\n        <img\r\n          alt={props.name}\r\n          src={props.image}\r\n          id={props.id}\r\n          onClick={() => props.shuffleScoreCard(props.id)}\r\n          className=\"shuffleScore\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n//import \"./Wrapper.css\";\r\n\r\n//stateless component\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className=\"score   m-3 text-right\">Your Score {props.score} : Top Score {props.topScore} </h3>    \r\n  </div>\r\n);\r\n\r\nexport default Score;","\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport pups from \"./cards.json\";\nimport \"./App.css\";\n\n\n\n\nclass App extends Component {\n  \n  // Setting this.state.pups to the cards json array\n  state = {\n    pups,\n    puppyIds: [],\n    score: 0,\n    topScore: 0,\n  };\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  newScore = this.state.score;\n  clickedPuppyIds = this.state.puppyIds;\n  topScore = this.state.topScore;\n\n  shuffleScoreCard = (id) => {\n    this.randomPups = this.shuffle(this.state.pups);\n    this.clickedPuppyIds = this.state.puppyIds;\n    if(this.clickedPuppyIds.some(pupId => pupId === id))\n    {\n      this.newScore = 0;\n      this.clickedPuppyIds=[];\n    }\n    else\n    {\n      this.newScore++;\n      this.clickedPuppyIds.push(id);\n      if(this.newScore > this.topScore)\n        this.topScore = this.newScore;\n    }\n    this.setState(state => (\n      {\n        pups:this.randomPups,\n        puppyIds:this.clickedPuppyIds,\n        score: this.newScore,\n        topScore: this.topScore,\n      }));\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header  style={{height:\"100%\"}}className=\"App-header\">\n          <h1 className=\"App-title\">The Clickster</h1>\n          <p style={{fontSize:\"30px\"}} className=\"App-intro text-center\">\n            Try not to click the same image twice!\n          </p>\n        </header>\n        \n        <Score score={this.state.score}\n           topScore={this.state.topScore}\n        />\n        <Wrapper>\n          {this.state.pups.map(puppy => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={puppy.id}\n              key={puppy.id}\n              image={puppy.image}\n            />\n          ))}\n        </Wrapper>\n        \n    </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}